pipeline {
    agent any
    tools{
        jdk 'JAVA_HOME'
    }
	
	environment { 
		IMAGE_REPO = "navdeeps02"
		NAME = "weatherforecast"
		VERSION = "${env.BUILD_ID}-${env.GIT_COMMIT}"
		IMAGE = "${NAME}:${VERSION}"
		registry = "${IMAGE_REPO}/${NAME}" 
		registryCredential = 'dockerhub_id'
	}
    stages {
        
        stage ('Checkout') {
             steps {
                cleanWs()
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/navdeeps02/weather-forecast.git']]])
             }
        }

        stage ('Build') {
            steps {
                 bat 'mvn clean package -Dmaven.test.skip=true'
            }
        }
		
		stage ('Docker Build') {
            steps {
					echo "for branch ${env.BRANCH_NAME}"
					script {
						dockerImage = docker.build "$registry" + ":$BUILD_NUMBER"
					}
            }
        }
		
		stage ('Docker push') {
            steps {
					script {						
						docker.withRegistry( '', registryCredential ) {
						dockerImage.push()
						latestImage = docker.image("$registry:latest")
						latestImage.push()
					}
				}
			}
		}
		
		stage ('Deploy') {
            steps {
					script {
						kubernetesDeploy(configs: "deployment.yaml", kubeconfigId: "kubecred")
					}
            }
        }
		
		stage ('Test') {
            steps {
					bat 'mvn test surefire-report:report'
            }
        }
	}
}